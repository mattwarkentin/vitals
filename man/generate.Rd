% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solver.R
\name{generate}
\alias{generate}
\title{Convert a chat to a solver function}
\usage{
generate(solver_chat = NULL)
}
\arguments{
\item{solver_chat}{An ellmer chat object, such as from \code{\link[ellmer:chat_claude]{ellmer::chat_claude()}}.}
}
\value{
The output of \code{generate()} is another function. That function takes in
a vector of \code{input}s, as well as a solver chat by the
name of \code{solver_chat} with the default supplied to \code{generate()} itself,
and returns a list of length 2:
\itemize{
\item \verb{[[1]]} is the final response from the solver, and
\item \verb{[[2]]} are the ellmer chat objects that led to that answer.
}

Both slots should have length equal to the number of \code{input}s.
The \code{input}s are evaluated in parallel, not in the sense of multiple R
sessions, but in the sense of multiple, asynchronous HTTP requests using
\verb{$chat_parallel()}.
}
\description{
\code{generate()} is the simplest possible solver one might use with
rinspect; it just passes its inputs to the supplied model and returns
its raw responses.
}
